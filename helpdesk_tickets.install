<?php
/**
 * @file
 * helpdesk_tickets.install
 */

/**
 * Implementation of hook_schema().
 * Define the current version of the database schema.
 */
function helpdesk_tickets_schema() {
    $schema = array();

    $schema['helpdesk_ticket'] = array(
        'description' => 'Stores information about helpdesk tickets.',
        'fields' => array(
            'nid' => array(
                'description' => 'The primary identifier for a helpdesk_ticket node.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'priority' => array(
                'description' => 'How important this helpdesk ticket is.',
                'type' => 'int',
                'size' => 'small',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'state' => array(
                'description' => 'The current state of this ticket.',
                'type' => 'int',
                'size' => 'small',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'cid' => array(
                'description' => 'The primary identifier for a caller.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'problem' => array(
                'description' => 'A type of problem, e.g. mouse or email.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'specialist' => array(
                'description' => 'The user id of the specialist assigned to this issue.',
                'type' => 'int',
                'unsigned' => TRUE
            ),
            'notes' => array(
                'description' => 'Any additional notes for this ticket.',
                'type' => 'text',
                'length' => 255
            ),
            'solution' => array(
                'description' => 'The primary identifier for a solution.',
                'type' => 'serial',
                'unsigned' => TRUE
            ),
            'solution_author' => array(
                'description' => 'The id of the user that came up with the solution.',
                'type' => 'int',
                'unsigned' => TRUE
            ),
            'closed_date' => array(
                'description' => 'The Unix timestamp for the date that the ticket was most recently closed.',
                'type' => 'int'
            )
        ),
        // Used for documentation only.
        'foreign keys' => array(
            'fk_caller_id' => array(
                'table' => 'helpdesk_caller',
                'columns' => array(
                    'cid' => 'cid'
                )
            )
        ),
        'primary key' => array('nid')
    );

    $schema['helpdesk_priority'] = array(
        'description' => 'Stores the different priorities of helpdesk tickets.',
        'fields' => array(
            'pid' => array(
                'description' => 'The primary identifier for a ticket\'s priority.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'priority' => array(
                'description' => 'A one word description for the priority of this ticket.',
                'type' => 'varchar',
                'length' => 6,
                'not null' => TRUE
            )
        ),
        'primary key' => array('pid')
    );

    $schema['helpdesk_state'] = array(
        'description' => 'Stores the different states of helpdesk tickets.',
        'fields' => array(
            'sid' => array(
                'description' => 'The primary identifier for a ticket\'s state.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'state' => array(
                'description' => 'A one word description for the state of this ticket.',
                'type' => 'varchar',
                'length' => 6,
                'not null' => TRUE
            )
        ),
        'primary key' => array('sid')
    );

    $schema['helpdesk_problem_type'] = array(
        'description' => 'Stores all the different types of problem an employee could be having.',
        'fields' => array(
            'pid' => array(
                'description' => 'The primary identifier for a problem type.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'problem' => array(
                'description' => 'A type of problem, e.g. mouse or email.',
                'type' => 'varchar',
                'length' => 32,
                'not null' => TRUE
            )
        ),
        'primary key' => array('pid')
    );

    $schema['helpdesk_caller'] = array(
        'description' => 'Stores the company employees that call in with problems.',
        'fields' => array(
            'cid' => array(
                'description' => 'The primary identifier for a caller.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'name' => array(
                'description' => 'The full name of a caller.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
            'ext_no' => array(
                'description' => 'The extension number of a caller.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
            'dept' => array(
                'description' => "The caller's department.",
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
        ),
        'primary key' => array('cid')
    );
    
    $schema['helpdesk_hardware'] = array(
        'description' => 'Stores information about the hardware.',
        'fields' => array(
            'hid' => array(
                'description' => 'The primary identifier for a piece of hardware.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'name' => array(
                'description' => 'The name of the hardware.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
            'serial_no' => array(
                'description' => 'The serial number of the hardware.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
        ),
        'primary key' => array('hid')
    );

    $schema['helpdesk_ticket_hardware'] = array(
        'description' => 'Stores information about the hardware that is associated with each ticket.',
        'fields' => array(
            'node' => array(
                'description' => 'The primary identifier for a helpdesk_ticket node.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'hardware' => array(
                'description' => 'The primary identifier for a piece of hardware.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            )
        ),
        // Used for documentation only.
        'foreign keys' => array(
            'fk_node_id' => array(
                'table' => 'helpdesk_ticket',
                'columns' => array(
                    'nid' => 'node'
                )
            ),
            'fk_hardware_id' => array(
                'table' => 'helpdesk_hardware',
                'columns' => array(
                    'hid' => 'hardware'
                )
            )
        ),
        'primary key' => array('node', 'hardware')
    );
    
    $schema['helpdesk_software'] = array(
        'description' => 'Stores information about the hardware.',
        'fields' => array(
            'sid' => array(
                'description' => 'The primary identifier for a piece of software.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'name' => array(
                'description' => 'The name of the software.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
            'serial_no' => array(
                'description' => 'The serial number of the software.',
                'type' => 'varchar',
                'length' => 64,
                'not null' => TRUE
            ),
        ),
        'primary key' => array('sid')
    );

    $schema['helpdesk_ticket_software'] = array(
        'description' => 'Stores information about the software that is associated with each ticket.',
        'fields' => array(
            'node' => array(
                'description' => 'The primary identifier for a helpdesk_ticket node.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'software' => array(
                'description' => 'The primary identifier for a piece of software.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            )
        ),
        // Used for documentation only.
        'foreign keys' => array(
            'fk_node_id' => array(
                'table' => 'helpdesk_ticket',
                'columns' => array(
                    'nid' => 'node'
                )
            ),
            'fk_software_id' => array(
                'table' => 'helpdesk_software',
                'columns' => array(
                    'sid' => 'software'
                )
            )
        ),
        'primary key' => array('node', 'software')
    );

    $schema['helpdesk_solution'] = array(
        'description' => 'Stores the solutions to the problems in helpdesk tickets.',
        'fields' => array(
            'sid' => array(
                'description' => 'The primary identifier for a solution.',
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'problem' => array(
                'description' => 'The primary identifier for a problem type.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'solution' => array(
                'description' => 'The solution description for a ticket.',
                'type' => 'varchar',
                'length' => 255,
                'not null' => TRUE
            )
        ),
        // Used for documentation only.
        'foreign keys' => array(
            'fk_problem_id' => array(
                'table' => 'helpdesk_problem_type',
                'columns' => array(
                    'pid' => 'problem'
                )
            )
        ),
        'primary key' => array('sid'),
    );

    $schema['helpdesk_expertise'] = array(
        'description' => 'Stores the problem types that specialists are experts at.',
        'fields' => array(
            'specialist' => array(
                'description' => 'The user id of a specialist.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            ),
            'problem' => array(
                'description' => 'The primary identifier for a problem type.',
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE
            )
        ),
        // Used for documentation only.
        'foreign keys' => array(
            'fk_specialist_id' => array(
                'table' => 'users',
                'columns' => array(
                    'uid' => 'specialist'
                )
            ),
            'fk_problem_type_id' => array(
                'table' => 'helpdesk_problem_type',
                'columns' => array(
                    'pid' => 'problem'
                )
            )
        ),
        'primary key' => array('specialist', 'problem')  
    );
    
    return $schema;
}

/**
 * Implementation of hook_install().
 * Perform setup tasks when the module is installed.
 */
function helpdesk_tickets_install() {
    // Add ticket priorities
    $priority_values = array(
        array(
            'priority' => 'low'
        ),
        array(
            'priority' => 'medium'
        ),
        array(
            'priority' => 'high'
        )
    );

    $query = db_insert('helpdesk_priority')->fields(array('priority'));

    foreach ($priority_values as $record) {
        $query->values($record);
    }

    $query->execute();

    // Add ticket states
    $state_values = array(
        array(
            'state' => 'open'
        ),
        array(
            'state' => 'closed'
        )
    );

    $query = db_insert('helpdesk_state')->fields(array('state'));

    foreach ($state_values as $record) {
        $query->values($record);
    }

    $query->execute();

    // Add some default problem types
    $problem_values = array(
        array(
            'problem' => 'Monitor'
        ),
        array(
            'problem' => 'Keyboard'
        ),
        array(
            'problem' => 'Mouse'
        ),
        array(
            'problem' => 'Internet Connection'
        ),
        array(
            'problem' => 'Email'
        ),
        array(
            'problem' => 'Website'
        )
    );

    $query = db_insert('helpdesk_problem_type')->fields(array('problem'));

    foreach ($problem_values as $record) {
        $query->values($record);
    }

    $query->execute();

    // Add new roles to site
    $newRoles = array('operator', 'specialist');
  
    foreach ($newRoles as $r) {
        // Check if role with that name exists
        if (!user_role_load_by_name($r)) {
            $role = new stdClass();
            $role->name = $r;
            user_role_save($role);
        }
    }
}

/**
 * Implementation of hook_uninstall().
 * Remove any information that the module sets.
 */
function helpdesk_tickets_uninstall()
{
    // Delete all helpdesk_ticket nodes
    db_delete('node')
        ->condition('type', 'helpdesk_ticket')
        ->execute();
}
